import { ElementRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor, FormBuilder, FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { TranslateService } from '@ngx-translate/core';
import { EntityService } from '@core/http/entity.service';
import { TruncatePipe } from '@shared/pipe/truncate.pipe';
import { SlackChanelType, SlackConversation } from '@shared/models/notification.models';
import { NotificationService } from '@core/http/notification.service';
import * as i0 from "@angular/core";
export declare class SlackConversationAutocompleteComponent implements ControlValueAccessor, OnInit, OnChanges {
    private store;
    translate: TranslateService;
    truncate: TruncatePipe;
    private entityService;
    private notificationService;
    private fb;
    notificationDeliveryMethodTranslateMap: Map<import("@shared/models/notification.models").NotificationDeliveryMethod, string>;
    conversationSlackFormGroup: FormGroup;
    labelText: any;
    requiredText: any;
    private requiredValue;
    get required(): boolean;
    set required(value: boolean);
    disabled: boolean;
    slackChanelType: SlackChanelType;
    token: string;
    slackInput: ElementRef;
    slackConversation$: Observable<Array<SlackConversation>>;
    slackSearchText: string;
    private modelValue;
    private dirty;
    private latestSearchConversetionResult;
    private slackConversetionFetchObservable$;
    private propagateChange;
    constructor(store: Store<AppState>, translate: TranslateService, truncate: TruncatePipe, entityService: EntityService, notificationService: NotificationService, fb: FormBuilder);
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    setDisabledState(isDisabled: boolean): void;
    textIsNotEmpty(text: string): boolean;
    writeValue(value: SlackConversation | null): void;
    onFocus(): void;
    updateView(value: SlackConversation | null): void;
    displaySlackConversationFn(slackConversation?: SlackConversation): string | undefined;
    private fetchSlackConversation;
    private getSlackConversationByType;
    private createSlackConversationFilter;
    private clearSlackCache;
    clear(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SlackConversationAutocompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SlackConversationAutocompleteComponent, "tb-slack-conversation-autocomplete", never, { "labelText": "labelText"; "requiredText": "requiredText"; "required": "required"; "disabled": "disabled"; "slackChanelType": "slackChanelType"; "token": "token"; }, {}, never, never, false, never>;
}
