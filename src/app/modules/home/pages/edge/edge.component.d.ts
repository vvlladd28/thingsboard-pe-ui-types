import { ChangeDetectorRef } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { EntityType } from '@shared/models/entity-type.models';
import { TranslateService } from '@ngx-translate/core';
import { GroupEntityComponent } from '@home/components/group/group-entity.component';
import { EdgeInfo } from '@shared/models/edge.models';
import { GroupEntityTableConfig } from '@home/models/group/group-entities-table-config.models';
import { EntityTableConfig } from '@home/models/entity/entities-table-config.models';
import { UserPermissionsService } from '@core/http/user-permissions.service';
import * as i0 from "@angular/core";
export declare class EdgeComponent extends GroupEntityComponent<EdgeInfo> {
    protected store: Store<AppState>;
    protected translate: TranslateService;
    protected entityValue: EdgeInfo;
    protected entitiesTableConfigValue: EntityTableConfig<EdgeInfo> | GroupEntityTableConfig<EdgeInfo>;
    fb: UntypedFormBuilder;
    protected cd: ChangeDetectorRef;
    protected userPermissionsService: UserPermissionsService;
    entityType: typeof EntityType;
    constructor(store: Store<AppState>, translate: TranslateService, entityValue: EdgeInfo, entitiesTableConfigValue: EntityTableConfig<EdgeInfo> | GroupEntityTableConfig<EdgeInfo>, fb: UntypedFormBuilder, cd: ChangeDetectorRef, userPermissionsService: UserPermissionsService);
    ngOnInit(): void;
    hideDelete(): boolean;
    hideManageUsers(): boolean;
    hideManageAssets(): boolean;
    hideManageDevices(): boolean;
    hideManageEntityViews(): boolean;
    hideManageDashboards(): boolean;
    hideManageSchedulerEvents(): boolean;
    buildForm(entity: EdgeInfo): UntypedFormGroup;
    updateForm(entity: EdgeInfo): void;
    updateFormState(): void;
    onEdgeIdCopied($event: any): void;
    onEdgeInfoCopied(type: string): void;
    isTenantAdmin(): boolean;
    private generateRoutingKeyAndSecret;
    static ɵfac: i0.ɵɵFactoryDeclaration<EdgeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EdgeComponent, "tb-edge", never, {}, {}, never, never, false, never>;
}
